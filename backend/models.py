# The models are designed according to the classic SQLAlchemy pattern
# so that they can be used outside the application if needed
from sqlalchemy.orm import relationship
from sqlalchemy import (
    Column,
    Integer,
    String,
    ForeignKey
)
from sqlalchemy.ext.declarative import declarative_base

Base = declarative_base()


class Patient(Base):
    __tablename__ = "patient"
    id = Column(Integer, primary_key=True, autoincrement=True) # autogenerated int
    patient = Column(String) # pattern = BIGRP-0000{id} based on autogenerated id
    sex = Column(String) # F/M
    #biopsy = relationship("Biopsy", back_populates="patient")
    #case = relationship("Case", back_populates="patient")

    def __repr__(self):
        return '<Patient {}>'.format(self.patient)

